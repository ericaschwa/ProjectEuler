# Each new term in the Fibonacci sequence is generated by adding the
# previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not
# exceed four million, find the sum of the even-valued terms.

def evenFib(n):
	if n == 0:
		return 0
	return fibHelperIter(n, 0, 1, 0)

def fibHelper(n, p0, p1, acc):
	if n == 1:
		return acc
	elif p1 % 2 == 0:
		return fibHelper(n - 1, p1, p0 + p1, acc + p1)
	else:
		return fibHelper(n - 1, p1, p0 + p1, acc)
	
def fibHelperIter(n, p0, p1, acc):
	while n > 1:
		if p1 % 2 == 0:
			acc += p1
		n -= 1
		temp = p0
		p0 = p1
		p1 = temp + p1
	return acc

print evenFib(10) # should be 44
print evenFib(4000)
